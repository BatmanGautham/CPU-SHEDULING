#include<stdio.h>

struct process 
{
 int p,bt,ct,tat,wt,rt;
};

void main()
{
 int n,i,quanta,current_ct=0,flag=0,j,a[50],k=0;
 float total_wt=0,total_tat=0;
 
 printf("\n\nROUND ROBIN\n");
 printf("\nEnter the number of processes : ");
 scanf("%d",&n);
 
 int BTsum=0;
 
 struct process p[n];
 
 printf("\nEnter the Burst Time\n");
 for(i=0;i<n;i++)
 {
  printf("BT of P%d : ",i);
  scanf("%d",&p[i].bt);
  p[i].p=i;
  p[i].rt=p[i].bt;
  
 }
 
 printf("\nEnter the time slice for the processes : ");
 scanf("%d",&quanta);
 printf("\nGANTT CHART\n***********\n\n");
 

 
 printf("\n|");
 for(i=0;i<n;i++)
 {
  flag=0;
  if(p[i].rt<quanta&&p[i].rt>0)
  {
   printf(" P%d |",i);
   current_ct+=p[i].rt;
   p[i].ct=current_ct;
   p[i].rt=0;
   a[k++]=current_ct;
  }
  else if(p[i].rt>0)
  {
   printf(" P%d |",i);
   current_ct+=quanta;
   p[i].rt=p[i].rt-quanta;
   if(p[i].rt==0)
   {
    p[i].ct=current_ct;
   }
   a[k++]=current_ct;
  }
  for(j=0;j<n;j++)
  {
   if(p[j].rt!=0)
    flag=1;
  } 
  if((i==n-1)&&(flag==1))
   i=-1;
 }
 printf("\n");
  for(i=0;i<k;i++) // BOTTOM BORDER
  {
   printf("_____");
  }
  
 printf("\n0   ");
 
 for(i=0;i<k;i++)
  printf(" %d   ",a[i]);
  
 printf("\n");

  for(i=0;i<n;i++)
  {
   p[i].tat=p[i].ct;
   p[i].wt=p[i].tat-p[i].bt;
  }
  for(i=0;i<n;i++)
  {
   total_tat+=p[i].tat;
   total_wt+=p[i].wt;
  }
 printf("\nAverage Turnaround time : %.2f ",total_tat/n);
 printf("\nAverage Waiting time : %.2f \n\n",total_wt/n);	
}


/*OUTPUT

ROUND ROBIN

Enter the number of processes : 3

Enter the Burst Time
BT of P0 : 3
BT of P1 : 4
BT of P2 : 3

Enter the time slice for the processes : 1

GANTT CHART
***********


| P0 | P1 | P2 | P0 | P1 | P2 | P0 | P1 | P2 | P1 |
__________________________________________________
0    1    2    3    4    5    6    7    8    9    10   

Average Turnaround time : 8.67 
Average Waiting time : 5.33 

*/
